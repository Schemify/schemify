// * Generaci칩n autom치tica con ts-proto y soporte NestJS
// * Ejecuta: 
// * npx protoc --plugin=./node_modules/.bin/protoc-gen-ts_proto.cmd --ts_proto_out=./ --ts_proto_opt=nestJs=true ./libs/proto/src/services/micromicro_service/micromicro.proto

syntax = "proto3";

package micromicro;

//
// ================================
//   游닍 Servicio MicromicroService
// ================================
//
// Contratos de comunicaci칩n entre el micromicro y el servidor
// para la gesti칩n de ejemplos en la aplicaci칩n.
//
service MicromicroService {
  // * Crear un nuevo ejemplo
  rpc createMicromicro(CreateMicromicroDto) returns (Micromicro) {}

  // * Obtener todos los ejemplos (no paginado)
  rpc getAllMicromicro(MicromicroEmpty) returns (Micromicro) {}

  // * Obtener un ejemplo por ID
  rpc getMicromicroById(GetMicromicroByIdDto) returns (Micromicro) {}

  // * Actualizar un ejemplo existente
  rpc updateMicromicro(UpdateMicromicroDto) returns (Micromicro) {}

  // * Eliminar un ejemplo por ID
  rpc deleteMicromicro(GetMicromicroByIdDto) returns (MicromicroEmpty) {}

  // * Obtener ejemplos paginados (cl치sico page + limit)
//   rpc getPaginatedMicromicro(PaginationRequest) returns (PaginatedMicromicro) {}

  // * Soporte para scroll infinito (cursor-based pagination)
  rpc getMicromicroByCursor(CursorPaginationRequest) returns (CursorPaginatedMicromicro) {}
}

//
// ================================
//   游닌 Mensajes de entrada
// ================================
//

// ! Mensaje vac칤o (com칰n en operaciones sin payload)
message MicromicroEmpty {}

// * Crear nuevo ejemplo
message CreateMicromicroDto {
  string name = 1;
  optional string description = 2;
}

// * Actualizar un ejemplo
message UpdateMicromicroDto {
  string id = 1;
  UpdateMicromicroData micromicro = 2;
}

// * Obtener un ejemplo por su ID
message GetMicromicroByIdDto {
  string id = 1;
}

// * Solicitud de paginaci칩n cl치sica
// message PaginationRequest {
//   int32 page = 1;  // P치gina actual (empieza en 1)
//   int32 limit = 2; // Elementos por p치gina
// }

// * Solicitud de paginaci칩n por cursor (scroll infinito)
message CursorPaginationRequest {
  string afterId = 1; // ID del 칰ltimo elemento visto
  int32 limit = 2;    // Elementos siguientes a devolver
}

//
// ================================
//   游닋 Mensajes de salida
// ================================
//

// * Lista de m칰ltiples ejemplos (no paginada)
message Micromicro {
  repeated Micromicro micromicro = 1;
}

// * Lista de ejemplos paginada con `page`/`limit`
message PaginatedMicromicro {
  repeated Micromicro micromicro = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
}

// * Lista de ejemplos paginada con `cursor`
message CursorPaginatedMicromicro {
  repeated Micromicro micromicro = 1;
  string nextCursor = 2;
  bool hasMore = 3;
}

//
// ================================
//   游빔 Modelo base: Micromicro
// ================================
//

// * Representaci칩n base de un ejemplo
message Micromicro {
  string id = 1;            // ! ID 칰nico del ejemplo
  string name = 2;
  optional string description = 3;
}

// * Datos anidados para actualizar un ejemplo
message UpdateMicromicroData {
  string name = 1;
  optional string description = 2;
}
